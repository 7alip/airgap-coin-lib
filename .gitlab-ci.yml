image: docker:latest

variables:
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  IMAGE_TAG_CURRENT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

stages:
  - build
  - test
  - qa
  - publish

build:
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build --cache-from $IMAGE_TAG_LATEST -t $IMAGE_TAG_LATEST .
    - docker tag $IMAGE_TAG_LATEST $IMAGE_TAG_CURRENT
    - docker push $IMAGE_TAG_CURRENT
    - docker push $IMAGE_TAG_LATEST
  tags:
    - docker

unit:
  stage: test
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker run --name unit-$CI_COMMIT_SHA $IMAGE_TAG_CURRENT npm run test
    - docker run --name unit-legacy-$CI_COMMIT_SHA $IMAGE_TAG_CURRENT npm run test-legacy
  after_script:
    - docker rm unit-$CI_COMMIT_SHA
    - docker rm unit-legacy-$CI_COMMIT_SHA
  tags:
    - docker

publish:
  stage: publish
  only:
    - master
  when: manual
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker run --env NPM_AUTH_TOKEN --name unit-$CI_COMMIT_SHA $IMAGE_TAG_CURRENT ./npm-ci-publish.sh
  after_script:
    - docker rm unit-$CI_COMMIT_SHA
    - docker rm unit-legacy-$CI_COMMIT_SHA
  tags:
    - docker
